{"version":3,"sources":["src/status-calculator-component.js"],"names":["BaseComponent","translate","translations","template","calculate","constructor","$template","$status","connectedCallback","$programs","fetch","then","response","json","data","reduce","programs","item","code","querySelector","value","display","airports","totals","el_list","innerHTML","Object","keys","map","id","program","console","log","qualification","status","filter","allianceStatus","build","type","needed","number","collected","qm","progress","milesName","milesname","$locale","$segments","length","segments","secType","secNeeded","secNumber","secCollected","secProgress","secNote","secmilesName","secmilesname","secCalculate","flat","undefined","sort","a","b","forEach","el","document","createElement","text","name","note","toLocaleString","style","minimumFractionDigits","qualificationPeriod","qualificationPeriodType","validity","appendChild"],"mappings":"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","sourceRoot":"/source_map/","sourcesContent":["import BaseComponent from \"./base-component\";\nimport translate from \"./helper/translate\";\nimport translations from \"./translations\";\nimport template from \"./templates/status-calculator\";\nimport calculate from \"./calculate-functions\";\n\nexport default class extends BaseComponent {\n    constructor() {\n        super();\n        this.$template = template;\n        this.$status = \"Star Alliance Gold\";\n    }\n\n    connectedCallback() {\n        super.connectedCallback();\n\n        this.$programs = [];\n        fetch(\n            \"https://mileage.travel-dealz.eu/api/airline_programs?include=airlines&filter[has_qualification]=true&fields[airline_programs]=code,name,alliance,qualification&fields[airlines]=iatacode,name,alliance,airline_program_code\"\n        )\n            .then((response) => response.json())\n            .then((data) =>\n                data.reduce((programs, item) => {\n                    programs[item.code] = item;\n                    return programs;\n                }, {})\n            )\n            .then((programs) => (this.$programs = programs));\n    }\n\n    calculate() {\n        this.$status = this.querySelector('[name=\"status\"]').value;\n\n        super.calculate();\n    }\n\n    display({ value: data, programs, airports }, totals) {\n        super.display();\n\n        this.el_list.innerHTML = \"\";\n\n        Object.keys(totals)\n            .map((id) => {\n                const program = this.$programs[id];\n                console.log(program);\n                if (!program) {\n                    return [];\n                }\n\n                return program.qualification.status\n                    .filter((status) => this.$status === status.allianceStatus)\n                    .map((status) => {\n                        return status.qualification.map((qualification) => {\n                            let build = {\n                                program,\n                                status,\n                                qualification,\n                            };\n\n                            switch (qualification.type) {\n                                case \"miles\":\n                                    build.needed = qualification.number;\n                                    build.collected = totals[id].qm[0];\n                                    build.progress = build.collected / build.needed;\n                                    qualification.milesName\n                                        ? (build.milesname = qualification.milesName[this.$locale])\n                                        : (build.milesname = qualification.type);\n                                    break;\n                                case \"segments\":\n                                    build.needed = qualification.number;\n                                    build.collected = this.$segments.length;\n                                    build.progress = build.collected / build.needed;\n                                    qualification.milesName\n                                        ? (build.milesname = qualification.milesName[this.$locale])\n                                        : (build.milesname = qualification.type);\n                            }\n\n                            if (qualification.calculate) {\n                                build.collected = calculate[qualification.calculate]({\n                                    segments: this.$segments,\n                                    data,\n                                    program,\n                                    airports,\n                                });\n                                build.progress = build.collected / build.needed;\n                            }\n\n                            if (qualification.secType) {\n                                switch (qualification.secType) {\n                                    case \"miles\":\n                                        build.secNeeded = qualification.secNumber;\n                                        build.secCollected = totals[id].qm[0];\n                                        build.secProgress = build.secCollected / build.secNeeded;\n                                        build.secNote = qualification.secNote;\n                                        qualification.secmilesName\n                                            ? (build.secmilesname =\n                                                qualification.secmilesName[this.$locale])\n                                            : (build.secmilesname = qualification.type);\n                                        break;\n                                    case \"segments\":\n                                        build.secNeeded = qualification.secNumber;\n                                        build.secCollected = this.$segments.length;\n                                        build.secProgress = build.secCollected / build.secNeeded;\n                                        build.secNote = qualification.secNote;\n                                        qualification.secmilesName\n                                            ? (build.secmilesname =\n                                                qualification.secmilesName[this.$locale])\n                                            : (build.secmilesname = qualification.type);\n                                }\n\n                                if (qualification.secCalculate) {\n                                    build.secCollected = calculate[qualification.secCalculate]({\n                                        segments: this.$segments,\n                                        data,\n                                        program,\n                                        airports,\n                                    });\n                                    build.secProgress = build.secCollected / build.secNeeded;\n                                }\n                            }\n\n                            return build;\n                        });\n                    })\n                    .flat()\n                    .filter((status) => undefined !== typeof status.progress);\n            })\n            .flat()\n            .sort((a, b) => b.progress - a.progress)\n            .forEach((item) => {\n                let el = document.createElement(\"li\");\n                let text = `\n        <h3>${item.program.name}: ${item.status.name}</h3>\n        <div class=\"grid grid-cols-2 gap-x-4 gab-y-8 my-3\" style=\"row-gap: 1rem; column-gap: 2rem;\">\n          ${\n                    item.program.note\n                        ? `\n          <div class=\"col-span-2 text-sm\">\n            ${\n                            item.program.note && item.program.note[this.$locale]\n                                ? `<div>${item.program.note[this.$locale]}</div>`\n                                : \"\"\n                        }\n          </div>\n          `\n                        : \"\"\n                }\n          <div class=\"${\n                    \"undefined\" === typeof item.secProgress ? \"col-span-2 \" : \"\"\n                }flex flex-col justify-end\">\n            <div class=\"text-sm\">${item.progress.toLocaleString(undefined, {\n                    style: \"percent\",\n                    minimumFractionDigits: 0,\n                })} = ${item.collected.toLocaleString()} __(of) ${item.needed.toLocaleString()} __(${\n                    item.milesname\n                })</div>\n            <progress class=\"w-full\" value=\"${\n                    item.progress\n                }\">${item.progress.toLocaleString(undefined, {\n                    style: \"percent\",\n                    minimumFractionDigits: 0,\n                })}</progress>\n          </div>\n          ${\n                    \"undefined\" === typeof item.secProgress\n                        ? \"\"\n                        : `\n          <div class=\"flex flex-col justify-end\">\n            <div class=\"text-sm\">${item.secProgress.toLocaleString(undefined, {\n                            style: \"percent\",\n                            minimumFractionDigits: 0,\n                        })} = ${item.secCollected.toLocaleString()} __(of) ${item.secNeeded.toLocaleString()} __(${\n                            item.secmilesname\n                        })</div>\n            <progress class=\"w-full\" value=\"${\n                            item.secProgress\n                        }\">${item.secProgress.toLocaleString(undefined, {\n                            style: \"percent\",\n                            minimumFractionDigits: 0,\n                        })}</progress>\n           </div>\n          `\n                }\n          ${\n                    item.qualification.note || item.qualification.secNote\n                        ? `\n          <div class=\"text-sm${\n                            \"undefined\" === typeof item.qualification.secNote\n                                ? \" col-span-2 \"\n                                : \"\"\n                        }\">\n            ${\n                            item.qualification.note && item.qualification.note[this.$locale]\n                                ? `<div>${item.qualification.note[this.$locale]}</div>`\n                                : \"\"\n                        }\n          </div>\n          ${\n                            \"undefined\" !== typeof item.secProgress &&\n                            item.qualification.secNote\n                                ? `\n          <div class=\"text-sm\">\n            ${\n                                    item.qualification.secNote &&\n                                    item.qualification.secNote[this.$locale]\n                                        ? item.qualification.secNote[this.$locale]\n                                        : \"\"\n                                }\n          </div>\n          `\n                                : \"\"\n                        }\n          `\n                        : \"\"\n                }\n          ${\n                    item.status.note\n                        ? `\n          <div class=\"col-span-2 text-sm\">\n            ${\n                            item.status.note && item.status.note[this.$locale]\n                                ? `<div>${item.status.note[this.$locale]}</div>`\n                                : \"\"\n                        }\n          </div>\n          `\n                        : \"\"\n                }\n          <div class=\"text-center\">\n            <div class=\"text-sm\">__(Qualification period)</div>\n            <div>${item.qualification.qualificationPeriod} __(months)</div>\n            <div class=\"text-sm\">__(${\n                    item.program.qualification.qualificationPeriodType\n                })</div>\n          </div>\n          <div class=\"text-center\">\n            <div class=\"text-sm\">__(Validity)</div>\n            <div>__(at least) ${item.qualification.validity} __(months)</div>\n          </div>\n        </div>\n        `;\n\n                el.innerHTML = translate(\n                    text,\n                    translations[this.$locale] ? translations[this.$locale] : []\n                );\n                this.el_list.appendChild(el);\n            });\n    }\n}\n"]}