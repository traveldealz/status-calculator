{"version":3,"names":["countSegments","data","program","reduce","acc","itinerary","mileage","value","totals","find","item","code","id","rdm","countMilesLHM","segments","includes","carrier","qm","getmqd","qd","calculateAMExecutivebonus","miles","countAMDLMiles","calculateSegments","filter","segment","airlines","map","x","iatacode","length","countMiles","calculateAZExecutivebonus","calculateLHMSegements","calculateLHMExecutivebonus","calcLHM2021","calculateS7SegmentsWeight","bookingClass","calculateSKSegments","calculateSQExecutivebonus","countSUBusinessSegments","cabquery","countSVSegments","airports","origin","country_code","destination","calculateTGSegments","calculateUXMiles","ticketer","multiplier","price","calculateVNExecutivebonus"],"sourceRoot":"/source_map/","sources":["src/calculate-functions.js"],"sourcesContent":["export default {\n  countSegments: ({ data, program }) =>\n    data.reduce((acc, itinerary) => {\n      let mileage = itinerary.value?.totals?.find(\n        (item) => program.code === item.id\n      );\n      if (!mileage) {\n        return acc;\n      }\n      if (mileage.rdm) {\n        return 0 < mileage.rdm[0] ? acc + 1 : acc;\n      } else {\n        return acc;\n      }\n    }, 0),\n\n  countMilesLHM: ({ data, program, segments }) =>\n    data.reduce(\n      (acc, itinerary) => {\n        let mileage = itinerary.value?.totals?.find(\n          (item) => program.code === item.id\n        );\n        if (!mileage) {\n          return [acc[0], acc[1] + 1];\n        }\n        if (\n          [\"EN\", \"OS\", \"SN\", \"OU\", \"EW\", \"LO\", \"LH\", \"LG\", \"LX\", \"4Y\"].includes(\n            segments[acc[1]].carrier\n          )\n        ) {\n          return [acc[0] + mileage.qm[0], acc[1] + 1];\n        } else {\n          return [acc[0], acc[1] + 1];\n        }\n      },\n      [0, 0]\n    )[0],\n\n  getmqd: ({ data, program }) =>\n    data.reduce(\n      (acc, itinerary) => {\n        let mileage = itinerary.value?.totals?.find(\n          (item) => program.code === item.id\n        );\n        if (!mileage) {\n          return [acc[0], acc[1] + 1];\n        }\n        return 0 < mileage.qd[0]\n          ? [acc[0] + mileage.qd[0], acc[1] + 1]\n          : [acc[0], acc[1] + 1];\n      },\n      [0, 0]\n    )[0],\n\n  calculateAMExecutivebonus: ({ data }) =>\n    data.reduce((miles, itinerary) => {\n      let item = itinerary.value.totals.find((item) => \"AM\" === item.id);\n      if (!item) {\n        return miles;\n      }\n      if (50000 < miles) return miles + item.rdm[1];\n      else if (80000 < miles) return miles + item.rdm[2];\n      else if (100000 < miles) return miles + item.rdm[3];\n      else return miles + item.rdm[0];\n    }, 0),\n\n  countAMDLMiles: ({ data, segments }) =>\n    data.reduce(\n      (acc, itinerary) => {\n        let mileage = itinerary.value?.totals?.find((item) => \"AM\" === item.id);\n        if (!mileage) {\n          return [acc[0], acc[1] + 1];\n        }\n        if ([\"AM\", \"DL\"].includes(segments[acc[1]].carrier)) {\n          if (50000 > acc[0]) return [acc[0] + mileage.rdm[0], acc[1] + 1];\n          if (80000 > acc[0]) return [acc[0] + mileage.rdm[1], acc[1] + 1];\n          if (100000 > acc[0]) return [acc[0] + mileage.rdm[2], acc[1] + 1];\n          if (100000 < acc[0]) return [acc[0] + mileage.rdm[3], acc[1] + 1];\n        } else {\n          return [acc[0], acc[1] + 1];\n        }\n      },\n      [0, 0]\n    )[0],\n\n  calculateSegments: ({ segments, program }) =>\n    segments.filter((segment) =>\n      program.airlines.map((x) => x.iatacode).includes(segment.carrier)\n    ).length,\n\n  countMiles: ({ data, program, segments }) =>\n    data.reduce(\n      (acc, itinerary) => {\n        let mileage = itinerary.value?.totals?.find(\n          (item) => program.code === item.id\n        );\n        if (!mileage) {\n          return [acc[0], acc[1] + 1];\n        }\n        if ([program.code].includes(segments[acc[1]].carrier)) {\n          return [acc[0] + mileage.qm[0], acc[1] + 1];\n        } else {\n          return [acc[0], acc[1] + 1];\n        }\n      },\n      [0, 0]\n    )[0],\n\n  calculateAZExecutivebonus: ({ data }) =>\n    data.reduce((miles, itinerary) => {\n      let item = itinerary.value.totals.find((item) => \"AZ\" === item.id);\n      if (!item) {\n        return miles;\n      }\n      if (20000 < miles) {\n        return miles + item.rdm[1];\n      } else if (50000 < miles) {\n        return miles + item.rdm[2];\n      } else if (80000 < miles) {\n        return miles + item.rdm[3];\n      } else {\n        return miles + item.rdm[0];\n      }\n    }, 0),\n\n  calculateLHMSegements: ({ segments }) =>\n    segments.filter((segment) =>\n      [\"EN\", \"OS\", \"SN\", \"OU\", \"EW\", \"LO\", \"LH\", \"LG\", \"LX\"].includes(\n        segment.carrier\n      )\n    ).length,\n\n  calculateLHMExecutivebonus: ({ data }) => {\n    // If >35000 miles, take Executive Bonus\n    return data.reduce((miles, itinerary) => {\n      let item = itinerary.value.totals.find((item) => \"LHM\" === item.id);\n      if (!item) {\n        return miles;\n      }\n      return 35000 < miles ? miles + item.qm[1] : miles + item.qm[0];\n    }, 0);\n  },\n  calcLHM2021: ({ data, segments }) =>\n    data.reduce(\n      (acc, itinerary) => {\n        let mileage = itinerary.value?.totals?.find(\n          (item) => \"LHM\" === item.id\n        );\n        if (!mileage) {\n          return [acc[0], acc[1] + 1];\n        }\n        if (\n          [\"EN\", \"OS\", \"SN\", \"OU\", \"EW\", \"LO\", \"LH\", \"LG\", \"LX\", \"WK\"].includes(\n            segments[acc[1]].carrier\n          )\n        ) {\n          return acc[0] > 35000\n            ? [acc[0] + mileage.qm[1] * 2, acc[1] + 1]\n            : [acc[0] + mileage.qm[0] * 2, acc[1] + 1];\n        } else {\n          return acc[0] > 35000\n            ? [acc[0] + mileage.qm[1], acc[1] + 1]\n            : [acc[0] + mileage.qm[0], acc[1] + 1];\n        }\n      },\n      [0, 0]\n    )[0],\n\n  calculateS7SegmentsWeight: ({ data, segments }) =>\n    data.reduce(\n      (acc, itinerary) => {\n        let mileage = itinerary.value?.totals?.find((item) => \"S7\" === item.id);\n        if (!mileage) {\n          return [acc[0], acc[1] + 1];\n        }\n        if ([\"S7\"].includes(segments[acc[1]].carrier)) {\n          if ([\"J\", \"C\", \"D\"].includes(segments[acc[1]].bookingClass)) {\n            return [acc[0] + 2, acc[1] + 1];\n          } else {\n            return [acc[0] + 1, acc[1] + 1];\n          }\n        } else {\n          return [acc[0], acc[1] + 1];\n        }\n      },\n      [0, 0]\n    )[0],\n\n  calculateSKSegments: ({ segments }) =>\n    segments.filter((segment) => [\"SK\", \"WF\"].includes(segment.carrier)).length,\n\n  calculateSQExecutivebonus: ({ data }) => {\n    // If >25000 miles, take Executive Bonus\n    return data.reduce((miles, itinerary) => {\n      let item = itinerary.value.totals.find((item) => \"SQ\" === item.id);\n      if (!item) {\n        return miles;\n      }\n      return 25000 < miles ? miles + item.rdm[1] : miles + item.rdm[0];\n    }, 0);\n  },\n\n  countSUBusinessSegments: ({ data }) =>\n    data.reduce((acc, itinerary) => {\n      let mileage = itinerary.value?.totals?.find((item) => \"SU\" === item.id);\n      if (!mileage) {\n        return acc;\n      }\n      let cabquery = itinerary.value?.totals?.find((item) => \"SU\" === item.id);\n      if (cabquery[\"cabinclass\"] == \"Business Class\") {\n        return 0 < mileage.rdm[0] ? acc + 1 : acc;\n      }\n      return acc;\n    }, 0),\n\n  countSVSegments: ({ data, program, segments }) =>\n    data.reduce(\n      (acc, itinerary) => {\n        let mileage = itinerary.value?.totals?.find(\n          (item) => program === item.id\n        );\n        if (!mileage) {\n          return [acc[0], acc[1] + 1];\n        }\n        if (\n          airports[segments[acc[1]].origin].country_code !=\n          airports[segments[acc[1]].destination].country_code\n        ) {\n          return 0 < mileage.rdm[0]\n            ? [acc[0] + 1, acc[1] + 1]\n            : [acc[0], acc[1] + 1];\n        }\n        return [acc[0], acc[1] + 1];\n      },\n      [0, 0]\n    )[0],\n\n  calculateTGSegments: ({ segments }) =>\n    segments\n      .filter((segment) => [\"TG\"].includes(segment.carrier))\n      .filter((segment) => ![\"G\", \"V\", \"W\"].includes(segment.bookingClass))\n      .length,\n\n  calculateUXMiles: ({ data, program, segments, airports }) =>\n    data.reduce(\n      (acc, itinerary) => {\n        let mileage = itinerary.value?.totals?.find(\n          (item) => program === item.id\n        );\n        if (!mileage) {\n          return [acc[0], acc[1] + 1];\n        }\n        if (segments[acc[1]].carrier && segments[acc[1]].ticketer) {\n          if (\n            [program].includes(segments[acc[1]].carrier) ||\n            [program].includes(segments[acc[1]].ticketer)\n          ) {\n            let multiplier = 5;\n            if ([\"C\", \"J\", \"D\", \"I\"].includes(segments[acc[1]].bookingClass)) {\n              multiplier += 3;\n            }\n            if (\n              airports[segments[acc[1]].origin].country_code == \"US\" ||\n              airports[segments[acc[1]].destination].country_code == \"US\"\n            ) {\n              multiplier += 1;\n            }\n            if (18000 > acc[0])\n              return [acc[0] + segments[acc[1]].price * multiplier, acc[1] + 1];\n            if (32000 > acc[0])\n              return [\n                acc[0] + segments[acc[1]].price * multiplier * 1.5,\n                acc[1] + 1,\n              ];\n            if (60000 > acc[0])\n              return [\n                acc[0] + segments[acc[1]].price * multiplier * 1.75,\n                acc[1] + 1,\n              ];\n            if (60000 < acc[0])\n              return [\n                acc[0] + segments[acc[1]].price * multiplier * 2,\n                acc[1] + 1,\n              ];\n          }\n          return [acc[0] + mileage.rdm[0], acc[1] + 1];\n        } else {\n          return [acc[0] + mileage.rdm[0], acc[1] + 1];\n        }\n      },\n      [0, 0]\n    )[0],\n\n  calculateVNExecutivebonus: ({ data }) =>\n    data.reduce((miles, itinerary) => {\n      let item = itinerary.value.totals.find((item) => \"VN\" === item.id);\n      if (!item) {\n        return miles;\n      }\n      if (15000 < miles) {\n        return miles + item.rdm[1];\n      } else if (30000 < miles) {\n        return miles + item.rdm[2];\n      } else if (50000 < miles) {\n        return miles + item.rdm[3];\n      } else {\n        return miles + item.rdm[0];\n      }\n    }, 0),\n};\n"],"mappings":"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"}