{"version":3,"sources":["src/programs/SV.js"],"names":["countSegments","segments","data","airports","reduce","acc","itinerary","mileage","value","totals","find","item","id","origin","country_code","destination","rdm","name","alliance","qualificationPeriodType","status","allianceStatus","qualification","type","number","qualificationPeriod","validity","calculate","milesName","en","de"],"mappings":"AAEA,SAASA,aAAT,CAAwBC,QAAxB,EAAkCC,IAAlC,EAAwCC,QAAxC,EAAmD;AACjD,SAAOD,IAAI,CAACE,MAAL,CAAY,CAACC,GAAD,EAAKC,SAAL,KAAmB;AACpC,QAAIC,OAAO,GAAGD,SAAS,CAACE,KAAV,EAAiBC,MAAjB,EAAyBC,IAAzB,CAA8BC,IAAI,IAAI,SAASA,IAAI,CAACC,EAApD,CAAd;;AACA,QAAG,CAACL,OAAJ,EAAa;AACX,aAAO,CAACF,GAAG,CAAC,CAAD,CAAJ,EAASA,GAAG,CAAC,CAAD,CAAH,GAAO,CAAhB,CAAP;AACD;;AACD,QAAGF,QAAQ,CAACF,QAAQ,CAACI,GAAG,CAAC,CAAD,CAAJ,CAAR,CAAiBQ,MAAlB,CAAR,CAAkCC,YAAlC,IAAkDX,QAAQ,CAACF,QAAQ,CAACI,GAAG,CAAC,CAAD,CAAJ,CAAR,CAAiBU,WAAlB,CAAR,CAAuCD,YAA5F,EAAyG;AACrG,aAAO,IAAIP,OAAO,CAACS,GAAR,CAAY,CAAZ,CAAJ,GAAqB,CAACX,GAAG,CAAC,CAAD,CAAH,GAAO,CAAR,EAAWA,GAAG,CAAC,CAAD,CAAH,GAAO,CAAlB,CAArB,GAA4C,CAACA,GAAG,CAAC,CAAD,CAAJ,EAASA,GAAG,CAAC,CAAD,CAAH,GAAO,CAAhB,CAAnD;AACH;;AACK,WAAO,CAACA,GAAG,CAAC,CAAD,CAAJ,EAASA,GAAG,CAAC,CAAD,CAAH,GAAO,CAAhB,CAAP;AACP,GATM,EASJ,CAAC,CAAD,EAAI,CAAJ,CATI,EASI,CATJ,CAAP;AAUD;;AAGD,eAAe;AACXY,EAAAA,IAAI,EAAE,iBADK;AAEXC,EAAAA,QAAQ,EAAE,SAFC;AAGXC,EAAAA,uBAAuB,EAAE,eAHd;AAIXC,EAAAA,MAAM,EAAE,CACJ;AACIH,IAAAA,IAAI,EAAE,QADV;AAEII,IAAAA,cAAc,EAAE,eAFpB;AAGIC,IAAAA,aAAa,EAAE,CACX;AACIC,MAAAA,IAAI,EAAE,OADV;AAEIC,MAAAA,MAAM,EAAE,KAFZ;AAGIC,MAAAA,mBAAmB,EAAE,EAHzB;AAIIC,MAAAA,QAAQ,EAAE;AAJd,KADW,EAQX;AACIH,MAAAA,IAAI,EAAE,UADV;AAEIC,MAAAA,MAAM,EAAE,EAFZ;AAGIG,MAAAA,SAAS,EAAE3B,aAHf;AAIIyB,MAAAA,mBAAmB,EAAE,EAJzB;AAKIG,MAAAA,SAAS,EAAE;AACPC,QAAAA,EAAE,EAAE,wBADG;AAEPC,QAAAA,EAAE,EAAE;AAFG,OALf;AASIJ,MAAAA,QAAQ,EAAE;AATd,KARW;AAHnB,GADI,EA0BJ;AACIT,IAAAA,IAAI,EAAE,MADV;AAEII,IAAAA,cAAc,EAAE,oBAFpB;AAGIC,IAAAA,aAAa,EAAE,CACX;AACIC,MAAAA,IAAI,EAAE,OADV;AAEIC,MAAAA,MAAM,EAAE,KAFZ;AAGIC,MAAAA,mBAAmB,EAAE,EAHzB;AAIIC,MAAAA,QAAQ,EAAE;AAJd,KADW,EAQX;AACIH,MAAAA,IAAI,EAAE,UADV;AAEIC,MAAAA,MAAM,EAAE,EAFZ;AAGIG,MAAAA,SAAS,EAAE3B,aAHf;AAIIyB,MAAAA,mBAAmB,EAAE,EAJzB;AAKIG,MAAAA,SAAS,EAAE;AACPC,QAAAA,EAAE,EAAE,wBADG;AAEPC,QAAAA,EAAE,EAAE;AAFG,OALf;AASIJ,MAAAA,QAAQ,EAAE;AATd,KARW;AAHnB,GA1BI;AAJG,CAAf","sourceRoot":"/source_map/","sourcesContent":["\n\nfunction countSegments( segments, data, airports ) {\n  return data.reduce((acc,itinerary) => {\n    let mileage = itinerary.value?.totals?.find(item => 'OK' === item.id);\n    if(!mileage) {\n      return [acc[0], acc[1]+1];\n    }\n    if(airports[segments[acc[1]].origin].country_code != airports[segments[acc[1]].destination].country_code){\n        return 0 < mileage.rdm[0] ? [acc[0]+1, acc[1]+1] : [acc[0], acc[1]+1];\n    }\n          return [acc[0], acc[1]+1];\n  }, [0, 0])[0];\n}\n\n\nexport default {\n    name: 'Saudia ALFURSAN',\n    alliance: 'SkyTeam',\n    qualificationPeriodType: 'Calendar year',\n    status: [\n        {\n            name: 'Silver',\n            allianceStatus: 'SkyTeam Elite',\n            qualification: [\n                {\n                    type: 'miles',\n                    number: 25000,\n                    qualificationPeriod: 12,\n                    validity: 12,\n                \n                },\n                {\n                    type: 'segments',\n                    number: 20,\n                    calculate: countSegments,\n                    qualificationPeriod: 12,\n                    milesName: {\n                        en: 'international segments',\n                        de: 'internationalen Segmenten',\n                    },\n                    validity: 12,\n                \n                },\n            ]\n        },\n        {\n            name: 'Gold',\n            allianceStatus: 'SkyTeam Elite Plus',\n            qualification: [\n                {\n                    type: 'miles',\n                    number: 50000,\n                    qualificationPeriod: 12,\n                    validity: 12,\n                \n                },\n                {\n                    type: 'segments',\n                    number: 40,\n                    calculate: countSegments,\n                    qualificationPeriod: 12,\n                    milesName: {\n                        en: 'international segments',\n                        de: 'internationalen Segmenten',\n                    },\n                    validity: 12,\n                \n                },\n            ]\n        },\n           \n    ]\n};"]}