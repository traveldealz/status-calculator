{"version":3,"sources":["src/programs/LHM.js"],"names":["calculateSegements","segments","filter","segment","includes","carrier","length","calculateExecutivebonus","data","console","log","reduce","miles","itinerary","item","value","totals","find","id","qm","calc2021","acc","mileage","name","alliance","qualificationPeriodType","status","allianceStatus","qualification","type","number","qualificationPeriod","calculate","validity","milesName","en","de","note","es"],"mappings":"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","sourceRoot":"/source_map/","sourcesContent":["function calculateSegements(segments) {\n  return segments.filter(segment => ['EN','OS','SN','OU','EW','LO','LH','LG','LX'].includes(segment.carrier)).length;\n}\nfunction calculateExecutivebonus(segments, data) {\n  // If >35000 miles, take Executive Bonus\n  console.log(data);\n  return data.reduce((miles, itinerary) => {\n        let item = itinerary.value.totals.find(item => 'LHM' === item.id);\n        if(!item) {\n          return miles;\n        }\n        return 35000 < miles ? miles + item.qm[1] : miles + item.qm[0];\n      }, 0 );\n\n}\n\nfunction calc2021(segments, data) {\n   return data.reduce((acc,itinerary) => {\n\n        let mileage = itinerary.value?.totals?.find(item => 'LHM' === item.id);\n        if(!mileage) {\n          return [acc[0], acc[1]+1];\n        }\n        if(['EN','OS','SN','OU','EW','LO','LH','LG','LX', 'WK'].includes(segments[acc[1]].carrier)) {\n                return acc[0] > 35000 ? [acc[0] + mileage.qm[1]*2, acc[1]+1] : [acc[0] + mileage.qm[0]*2, acc[1]+1];\n        }\n        else {\n                return acc[0] > 35000 ? [acc[0] + mileage.qm[1], acc[1]+1] : [acc[0] + mileage.qm[0], acc[1]+1];   \n        }\n        }, [0, 0])[0];\n}\n\nexport default {\n  name: 'Miles & More',\n  alliance: 'Star Alliance',\n  qualificationPeriodType: 'Calendar year',\n  status: [\n    {\n      name: 'Frequent Traveller',\n      allianceStatus: 'Star Alliance Silver',\n      qualification: [\n        {\n          type: 'miles',\n          number: 35000,\n          qualificationPeriod: 12,\n          calculate: calculateExecutivebonus,\n          validity: 24,\n          milesName: {\n                        en: 'status miles',\n                        de: 'Statusmeilen',\n                    },\n        },\n        {\n          type: 'segments',\n          number: 30,\n          qualificationPeriod: 12,\n          validity: 24,\n          calculate: calculateSegements,\n          note: {\n            en: 'Only segments on Miles & More Member airline partners counts.',\n            de: 'Nur Segmente durchgeführt von Miles & More Partnerairlines zahlen.',\n            es: '',\n          },\n        },\n      ],\n    },\n    {\n      name: 'Senator',\n      allianceStatus: 'Star Alliance Gold',\n      qualification: [\n        {\n          type: 'miles',\n          number: 100000,\n          qualificationPeriod: 12,\n          validity: 24,\n          milesName: {\n                        en: 'status miles',\n                        de: 'Statusmeilen',\n                    },\n          calculate: calculateExecutivebonus,\n          note: {\n            en: '',\n            de: '',\n            es: '',\n          },\n        },\n      ],\n    },\n    {\n      name: 'Frequent Traveller 2021',\n      allianceStatus: 'Star Alliance Silver',\n      qualification: [\n        {\n          type: 'miles',\n          number: 35000,\n          qualificationPeriod: 12,\n          validity: 24,\n          milesName: {\n                        en: 'status miles',\n                        de: 'Statusmeilen',\n                    },\n          calculate: calc2021,\n          note: {\n            en: 'In 2021 you will get double status miles on Lufthansa-Group flights',\n            de: 'Im Jahr 2021 gibt es ausnahmsweise doppelte Statusmeilen auf Flügen der Lufthansa-Group',\n            es: '',\n          },\n        }\n      ],\n    },\n    {\n      name: 'Senator 2021',\n      allianceStatus: 'Star Alliance Gold',\n      qualification: [\n        {\n          type: 'miles',\n          number: 100000,\n          qualificationPeriod: 12,\n          validity: 24,\n          milesName: {\n                        en: 'status miles',\n                        de: 'Statusmeilen',\n                    },\n          calculate: calc2021,\n          note: {\n            en: 'In 2021 you will get double status miles on Lufthansa-Group flights',\n            de: 'Im Jahr 2021 gibt es ausnahmsweise doppelte Statusmeilen auf Flügen der Lufthansa-Group',\n            es: '',\n          },\n        }\n      ],\n    },\n    // {\n    //   name: 'HON Circle Member',\n    //   allianceStatus: 'Star Alliance Silver',\n    //   qualification: [\n    //     {\n    //       type: 'miles',\n    //       number: 600000,\n    //       qualificationPeriod: 24,\n    //       validity: 24,\n    //       calculate: segments => segments.filter(segment => ['SK', 'WF'].includes(segment.carrier)).length,\n    //       note: {\n    //         en: 'Only HON Circle Miles in Business- & First Class on Miles&More Member Airlines counts',\n    //         de: '',\n    //         es: '',\n    //       },\n    //     },\n    //   ],\n    // }\n  ],\n  note: {\n    en: '',\n    de: '',\n    es: '',\n  },\n};"]}