{"version":3,"sources":["src/programs/AM.js"],"names":["calculateExecutivebonus","segments","data","console","log","reduce","miles","itinerary","item","value","totals","find","id","rdm","countAMDLMiles","acc","mileage","includes","carrier","name","alliance","qualificationPeriodType","status","allianceStatus","qualification","type","number","qualificationPeriod","validity","calculate","secType","secNumber","secmilesName","en","de","secCalculate"],"mappings":"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","sourceRoot":"/source_map/","sourcesContent":["function calculateExecutivebonus(segments, data) {\n  console.log(data);\n  return data.reduce((miles, itinerary) => {\n        let item = itinerary.value.totals.find(item => 'AM' === item.id);\n        if(!item) {\n          return miles;\n        }\n        if(50000 < miles) return miles + item.rdm[1];\n        else if(80000 < miles) return miles + item.rdm[2];\n        else if(100000 < miles) return miles + item.rdm[3];\n        else return miles + item.rdm[0];\n      }, 0 );\n\n}\n\nfunction countAMDLMiles(segments, data) {\n  return data.reduce((acc,itinerary) => {\n\n        let mileage = itinerary.value?.totals?.find(item => 'AM' === item.id);\n        if(!mileage) {\n          return [acc[0], acc[1]+1];\n        }\n        if(['AM','DL'].includes(segments[acc[1]].carrier)) {\n          if(50000 > acc[0]) return [acc[0] + mileage.rdm[0], acc[1]+1];\n          if(80000 > acc[0]) return [acc[0] + mileage.rdm[1], acc[1]+1];\n          if(100000 > acc[0]) return [acc[0] + mileage.rdm[2], acc[1]+1];\n          if(100000 < acc[0]) return [acc[0] + mileage.rdm[3], acc[1]+1];        \n        \n        }else{\n          return [acc[0], acc[1]+1];\n        }\n        \n        }, [0, 0])[0];\n\n}\n\n\nexport default {\n  name: 'Aeromexico Club Premier',\n  alliance: 'SkyTeam',\n  qualificationPeriodType: 'Calendar year',\n  status: [\n    {\n      name: 'Gold',\n      allianceStatus: 'SkyTeam Elite',\n      qualification: [\n        {\n          type: 'miles',\n          number: 50000,\n          qualificationPeriod: 12,\n          validity: 12,\n        },\n      ],\n    },\n    {\n      name: 'Platinum',\n      allianceStatus: 'SkyTeam Elite Plus',\n      qualification: [\n        {\n          type: 'miles',\n          number: 80000,\n          calculate: calculateExecutivebonus,\n          qualificationPeriod: 12,\n          validity: 12,\n        },\n      ],\n    },\n    {\n      name: 'Titanium',\n      allianceStatus: 'SkyTeam Elite Plus',\n      qualification: [\n        {\n          type: 'miles',\n          number: 100000,\n          secType: 'miles',\n          secNumber: 80000,\n          secmilesName: {\n              en: 'Miles with Delta or Aeromexico',\n              de: 'Meilen mit Delta oder Aeromexico',\n          },\n          calculate: calculateExecutivebonus,\n          secCalculate: countAMDLMiles,\n          qualificationPeriod: 12,\n          validity: 12,\n        },\n      ]\n    }\n  ]\n};"]}