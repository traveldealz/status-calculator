{"version":3,"sources":["src/programs/UL.js"],"names":["countSegments","segments","data","reduce","acc","itinerary","mileage","value","totals","find","item","id","rdm","calculateSegments","filter","segment","includes","carrier","length","countULMiles","qm","name","alliance","qualificationPeriodType","status","allianceStatus","qualification","type","number","qualificationPeriod","validity","secType","secNumber","secCalculate","secmilesName","en","de","milesName","calculate"],"mappings":"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","sourceRoot":"/source_map/","sourcesContent":["function countSegments( segments, data ) {\n  return data.reduce((acc,itinerary) => {\n    let mileage = itinerary.value?.totals?.find(item => 'UL' === item.id);\n    if(!mileage) {\n      return acc;\n    }\n    return 0 < mileage.rdm[0] ? acc+1 : acc;\n  }, 0);\n}\n\nfunction calculateSegments(segments) {\n    return segments.filter(segment => ['UL'].includes(segment.carrier)).length;\n}\n\nfunction countULMiles( segments, data ) {\n   return data.reduce((acc,itinerary) => {\n\n        let mileage = itinerary.value?.totals?.find(item => 'UL' === item.id);\n        if(!mileage) {\n          return [acc[0], acc[1]+1];\n        }\n        if(['UL'].includes(segments[acc[1]].carrier)) {\n                return [acc[0] + mileage.qm[0], acc[1]+1];\n        }\n        else {\n                return [acc[0], acc[1]+1];   \n        }\n        }, [0, 0])[0];\n}\n\nexport default {\n  name: 'SriLankan FlySmiLes',\n  alliance: 'Oneworld',\n  qualificationPeriodType: 'Calendar year',\n  status: [\n    {\n      name: 'Classic',\n      allianceStatus: 'Oneworld Ruby',\n      qualification: [\n        {\n          type: 'miles',\n          number: 20000,\n          qualificationPeriod: 12,\n          validity: 12,\n          secType: 'segments',\n                    secNumber: 1,\n                    secCalculate: calculateSegments,\n                    secmilesName: {\n                        en: 'segments with SriLankan',\n                        de: 'Segmenten mit SriLankan',\n                    },\n        },\n        {\n          type: 'segments',\n          number: 20,\n          qualificationPeriod: 12,\n          validity: 12,\n          milesName: {\n                        en: 'segments',\n                        de: 'Segmenten',\n                    },\n          calculate: countSegments,\n          secType: 'segments',\n                    secNumber: 1,\n                    secCalculate: calculateSegments,\n                    secmilesName: {\n                        en: 'segments with SriLankan',\n                        de: 'Segmenten mit SriLankan',\n                    },\n        },\n      ]\n    },\n    {\n      name: 'Gold',\n      allianceStatus: 'Oneworld Sapphire',\n      qualification: [\n        {\n          type: 'miles',\n          number: 40000,\n          qualificationPeriod: 12,\n          validity: 12,\n          secType: 'miles',\n                    secNumber: 20000,\n                    secCalculate: countULMiles,\n                    secmilesName: {\n                        en: 'miles with SriLankan',\n                        de: 'Meilen mit SriLankan',\n                    },\n        },\n        {\n          type: 'segments',\n          number: 40,\n          qualificationPeriod: 12,\n          validity: 12,\n          milesName: {\n                        en: 'segments',\n                        de: 'Segmenten',\n                    },\n          calculate: countSegments,\n          secType: 'segments',\n                    secNumber: 20,\n                    secCalculate: calculateSegments,\n                    secmilesName: {\n                        en: 'Segments with SriLankan',\n                        de: 'Segmenten mit SriLankan',\n                    },\n        },\n      ]\n    },\n    {\n      name: 'Platinum',\n      allianceStatus: 'Oneworld Emerald',\n      qualification: [\n        {\n          type: 'miles',\n          number: 60000,\n          qualificationPeriod: 12,\n          validity: 12,\n          secType: 'miles',\n                    secNumber: 30000,\n                    secCalculate: countULMiles,\n                    secmilesName: {\n                        en: 'miles with SriLankan',\n                        de: 'Meilen mit SriLankan',\n                    },\n        },\n        {\n          type: 'segments',\n          number: 60,\n          qualificationPeriod: 12,\n          validity: 12,\n          milesName: {\n                        en: 'segments',\n                        de: 'Segmenten',\n                    },\n          calculate: countSegments,\n          secType: 'segments',\n                    secNumber: 30,\n                    secCalculate: calculateSegments,\n                    secmilesName: {\n                        en: 'Segments with SriLankan',\n                        de: 'Segmenten mit SriLankan',\n                    },\n        },\n      ]\n    },\n  ]\n};"]}