{"version":3,"sources":["src/programs/CX.js"],"names":["calculateSegments","segments","filter","segment","includes","carrier","length","name","alliance","qualificationPeriodType","status","allianceStatus","qualification","type","number","qualificationPeriod","validity","milesName","en","de","secType","secNumber","secCalculate","secmilesName","note","es"],"mappings":"AAAA,SAASA,iBAAT,CAA2BC,QAA3B,EAAqC;AACjC,SAAOA,QAAQ,CAACC,MAAT,CAAgBC,OAAO,IAAI,CAAC,IAAD,EAAOC,QAAP,CAAgBD,OAAO,CAACE,OAAxB,CAA3B,EAA6DC,MAApE;AACH;;AAED,eAAe;AACbC,EAAAA,IAAI,EAAE,wBADO;AAEbC,EAAAA,QAAQ,EAAE,UAFG;AAGbC,EAAAA,uBAAuB,EAAE,iBAHZ;AAIbC,EAAAA,MAAM,EAAE,CACN;AACEH,IAAAA,IAAI,EAAE,QADR;AAEEI,IAAAA,cAAc,EAAE,eAFlB;AAGEC,IAAAA,aAAa,EAAE,CACb;AACEC,MAAAA,IAAI,EAAE,OADR;AAEEC,MAAAA,MAAM,EAAE,GAFV;AAGEC,MAAAA,mBAAmB,EAAE,EAHvB;AAIEC,MAAAA,QAAQ,EAAE,EAJZ;AAKEC,MAAAA,SAAS,EAAE;AACGC,QAAAA,EAAE,EAAE,aADP;AAEGC,QAAAA,EAAE,EAAE;AAFP,OALb;AASEC,MAAAA,OAAO,EAAE,UATX;AAUEC,MAAAA,SAAS,EAAE,CAVb;AAWEC,MAAAA,YAAY,EAAEtB,iBAXhB;AAYEuB,MAAAA,YAAY,EAAE;AACZL,QAAAA,EAAE,EAAE,8BADQ;AAEZC,QAAAA,EAAE,EAAE;AAFQ;AAZhB,KADa;AAHjB,GADM,EAwBF;AACFZ,IAAAA,IAAI,EAAE,MADJ;AAEFI,IAAAA,cAAc,EAAE,mBAFd;AAGFC,IAAAA,aAAa,EAAE,CACb;AACEC,MAAAA,IAAI,EAAE,OADR;AAEEC,MAAAA,MAAM,EAAE,GAFV;AAGEC,MAAAA,mBAAmB,EAAE,EAHvB;AAIEC,MAAAA,QAAQ,EAAE,EAJZ;AAKEC,MAAAA,SAAS,EAAE;AACGC,QAAAA,EAAE,EAAE,aADP;AAEGC,QAAAA,EAAE,EAAE;AAFP,OALb;AASEC,MAAAA,OAAO,EAAE,UATX;AAUEC,MAAAA,SAAS,EAAE,CAVb;AAWEC,MAAAA,YAAY,EAAEtB,iBAXhB;AAYEuB,MAAAA,YAAY,EAAE;AACZL,QAAAA,EAAE,EAAE,8BADQ;AAEZC,QAAAA,EAAE,EAAE;AAFQ;AAZhB,KADa;AAHb,GAxBE,EA+CF;AACFZ,IAAAA,IAAI,EAAE,SADJ;AAEFI,IAAAA,cAAc,EAAE,kBAFd;AAGFC,IAAAA,aAAa,EAAE,CACb;AACEC,MAAAA,IAAI,EAAE,OADR;AAEEC,MAAAA,MAAM,EAAE,IAFV;AAGEC,MAAAA,mBAAmB,EAAE,EAHvB;AAIEC,MAAAA,QAAQ,EAAE,EAJZ;AAKEC,MAAAA,SAAS,EAAE;AACGC,QAAAA,EAAE,EAAE,aADP;AAEGC,QAAAA,EAAE,EAAE;AAFP,OALb;AASEC,MAAAA,OAAO,EAAE,UATX;AAUEC,MAAAA,SAAS,EAAE,CAVb;AAWEC,MAAAA,YAAY,EAAEtB,iBAXhB;AAYEuB,MAAAA,YAAY,EAAE;AACZL,QAAAA,EAAE,EAAE,8BADQ;AAEZC,QAAAA,EAAE,EAAE;AAFQ;AAZhB,KADa;AAHb,GA/CE,CAJK;AA2EbK,EAAAA,IAAI,EAAE;AACJN,IAAAA,EAAE,EAAE,qCADA;AAEJC,IAAAA,EAAE,EAAE,oDAFA;AAGJM,IAAAA,EAAE,EAAE;AAHA;AA3EO,CAAf","sourceRoot":"/source_map/","sourcesContent":["function countSegments( segments, data ) {\n  return data.reduce((acc,itinerary) => {\n    let mileage = itinerary.value?.totals?.find(item => 'AA' === item.id);\n    if(!mileage) {\n      return acc;\n    }\n   if(mileage.rdm){\n    return 0 < mileage.rdm[0] ? acc+1 : acc;}else{return acc;}\n  }, 0);\n}\n\nfunction getmqd( segments, data ) {\n  return data.reduce((acc,itinerary) => {\n    let mileage = itinerary.value?.totals?.find(item => 'AA' === item.id);\n    if(!mileage) {\n      return [acc[0], acc[1]+1];\n    }\n            return 0 < mileage.qd[0] ? [acc[0]+mileage.qd[0], acc[1]+1] : [acc[0], acc[1]+1];\n  }, [0, 0])[0];\n}\n\n\nexport default {\n  name: 'American AAdvantage',\n  alliance: 'Oneworld',\n  qualificationPeriodType: 'Calendar year',\n  status: [\n    {\n      name: 'Gold',\n      allianceStatus: 'Oneworld Ruby',\n      qualification: [\n        {\n          type: 'miles',\n          number: 25000,\n          qualificationPeriod: 12,\n          validity: 12,\n          milesName: {\n                        en: 'EQM',\n                        de: 'EQM',\n                    },\n          secType: 'miles',\n          secNumber: 3000,\n          secCalculate: getmqd,\n          secmilesName: {\n              en: 'EQD',\n              de: 'EQD',\n          }\n        },\n        {\n          type: 'segments',\n          number: 30,\n          qualificationPeriod: 12,\n          validity: 12,\n          calculate: countSegments,\n          note: {\n            en: 'Only segments with mileage credit count.',\n            de: 'Nur Segmente mit Meilengutschrift z채hlen.',\n            es: '',\n          },\n          secType: 'miles',\n          secNumber: 3000,\n          secCalculate: getmqd,\n          secmilesName: {\n              en: 'EQD',\n              de: 'EQD',\n          },\n        },\n      ]\n    },\n    {\n      name: 'Platinum',\n      allianceStatus: 'Oneworld Sapphire',\n      qualification: [\n        {\n          type: 'miles',\n          number: 50000,\n          qualificationPeriod: 12,\n          validity: 12,\n          milesName: {\n                        en: 'EQM',\n                        de: 'EQM',\n                    },\n          secType: 'miles',\n          secNumber: 6000,\n          secCalculate: getmqd,\n          secmilesName: {\n              en: 'EQD',\n              de: 'EQD',\n          }\n        },\n        {\n          type: 'segments',\n          number: 60,\n          qualificationPeriod: 12,\n          validity: 12,\n          calculate: countSegments,\n          note: {\n            en: 'Only segments with mileage credit count.',\n            de: 'Nur Segmente mit Meilengutschrift z채hlen.',\n            es: '',\n          },\n          secType: 'miles',\n          secNumber: 6000,\n          secCalculate: getmqd,\n          secmilesName: {\n              en: 'EQD',\n              de: 'EQD',\n          }\n        },\n      ]\n    },\n    {\n      name: 'Platinum Pro',\n      allianceStatus: 'Oneworld Sapphire',\n      qualification: [\n        {\n          type: 'miles',\n          number: 75000,\n          qualificationPeriod: 12,\n          validity: 12,\n          milesName: {\n                        en: 'EQM',\n                        de: 'EQM',\n                    },\n          secType: 'miles',\n          secNumber: 9000,\n          secCalculate: getmqd,\n          secmilesName: {\n              en: 'EQD',\n              de: 'EQD',\n          }\n        },\n        {\n          type: 'segments',\n          number: 90,\n          qualificationPeriod: 12,\n          validity: 12,\n          calculate: countSegments,\n          note: {\n            en: 'Only segments with mileage credit count.',\n            de: 'Nur Segmente mit Meilengutschrift z채hlen.',\n            es: '',\n          },\n          secType: 'miles',\n          secNumber: 9000,\n          secCalculate: getmqd,\n          secmilesName: {\n              en: 'EQD',\n              de: 'EQD',\n          }\n        },\n      ]\n    },\n    {\n      name: 'Executive Platinum',\n      allianceStatus: 'Oneworld Emerald',\n      qualification: [\n        {\n          type: 'miles',\n          number: 100000,\n          qualificationPeriod: 12,\n          validity: 12,\n          milesName: {\n                        en: 'EQM',\n                        de: 'EQM',\n                    },\n          secType: 'miles',\n          secNumber: 15000,\n          secCalculate: getmqd,\n          secmilesName: {\n              en: 'EQD',\n              de: 'EQD',\n          }\n        },\n        {\n          type: 'segments',\n          number: 120,\n          qualificationPeriod: 12,\n          validity: 12,\n          calculate: countSegments,\n          note: {\n            en: 'Only segments with mileage credit count.',\n            de: 'Nur Segmente mit Meilengutschrift z채hlen.',\n            es: '',\n          },\n          secType: 'miles',\n          secNumber: 15000,\n          secCalculate: getmqd,\n          secmilesName: {\n              en: 'EQD',\n              de: 'EQD',\n          }\n        },\n      ]\n    },\n  ]\n};"]}