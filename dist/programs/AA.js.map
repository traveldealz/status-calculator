{"version":3,"sources":["src/programs/AA.js"],"names":["countSegments","segments","data","reduce","acc","itinerary","mileage","value","totals","find","item","id","rdm","getmqd","qd","name","alliance","qualificationPeriodType","status","allianceStatus","qualification","type","number","qualificationPeriod","validity","milesName","en","de","secType","secNumber","secCalculate","secmilesName","calculate","note","es"],"mappings":"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","sourceRoot":"/source_map/","sourcesContent":["function countSegments( segments, data ) {\n  return data.reduce((acc,itinerary) => {\n    let mileage = itinerary.value?.totals?.find(item => 'AA' === item.id);\n    if(!mileage) {\n      return acc;\n    }\n   if(mileage.rdm){\n    return 0 < mileage.rdm[0] ? acc+1 : acc;}else{return acc;}\n  }, 0);\n}\n\nfunction getmqd( segments, data ) {\n  return data.reduce((acc,itinerary) => {\n    let mileage = itinerary.value?.totals?.find(item => 'AA' === item.id);\n    if(!mileage) {\n      return [acc[0], acc[1]+1];\n    }\n            return 0 < mileage.qd[0] ? [acc[0]+mileage.qd[0], acc[1]+1] : [acc[0], acc[1]+1];\n  }, [0, 0])[0];\n}\n\n\nexport default {\n  name: 'American AAdvantage',\n  alliance: 'Oneworld',\n  qualificationPeriodType: 'Calendar year',\n  status: [\n    {\n      name: 'Gold',\n      allianceStatus: 'Oneworld Ruby',\n      qualification: [\n        {\n          type: 'miles',\n          number: 25000,\n          qualificationPeriod: 12,\n          validity: 12,\n          milesName: {\n                        en: 'EQM',\n                        de: 'EQM',\n                    },\n          secType: 'miles',\n          secNumber: 3000,\n          secCalculate: getmqd,\n          secmilesName: {\n              en: 'EQD',\n              de: 'EQD',\n          }\n        },\n        {\n          type: 'segments',\n          number: 30,\n          qualificationPeriod: 12,\n          validity: 12,\n          calculate: countSegments,\n          note: {\n            en: 'Only segments with mileage credit count.',\n            de: 'Nur Segmente mit Meilengutschrift zählen.',\n            es: '',\n          },\n          secType: 'miles',\n          secNumber: 3000,\n          secCalculate: getmqd,\n          secmilesName: {\n              en: 'EQD',\n              de: 'EQD',\n          },\n        },\n      ]\n    },\n    {\n      name: 'Platinum',\n      allianceStatus: 'Oneworld Sapphire',\n      qualification: [\n        {\n          type: 'miles',\n          number: 50000,\n          qualificationPeriod: 12,\n          validity: 12,\n          milesName: {\n                        en: 'EQM',\n                        de: 'EQM',\n                    },\n          secType: 'miles',\n          secNumber: 6000,\n          secCalculate: getmqd,\n          secmilesName: {\n              en: 'EQD',\n              de: 'EQD',\n          }\n        },\n        {\n          type: 'segments',\n          number: 60,\n          qualificationPeriod: 12,\n          validity: 12,\n          calculate: countSegments,\n          note: {\n            en: 'Only segments with mileage credit count.',\n            de: 'Nur Segmente mit Meilengutschrift zählen.',\n            es: '',\n          },\n          secType: 'miles',\n          secNumber: 6000,\n          secCalculate: getmqd,\n          secmilesName: {\n              en: 'EQD',\n              de: 'EQD',\n          }\n        },\n      ]\n    },\n    {\n      name: 'Platinum Pro',\n      allianceStatus: 'Oneworld Sapphire',\n      qualification: [\n        {\n          type: 'miles',\n          number: 75000,\n          qualificationPeriod: 12,\n          validity: 12,\n          milesName: {\n                        en: 'EQM',\n                        de: 'EQM',\n                    },\n          secType: 'miles',\n          secNumber: 9000,\n          secCalculate: getmqd,\n          secmilesName: {\n              en: 'EQD',\n              de: 'EQD',\n          }\n        },\n        {\n          type: 'segments',\n          number: 90,\n          qualificationPeriod: 12,\n          validity: 12,\n          calculate: countSegments,\n          note: {\n            en: 'Only segments with mileage credit count.',\n            de: 'Nur Segmente mit Meilengutschrift zählen.',\n            es: '',\n          },\n          secType: 'miles',\n          secNumber: 9000,\n          secCalculate: getmqd,\n          secmilesName: {\n              en: 'EQD',\n              de: 'EQD',\n          }\n        },\n      ]\n    },\n    {\n      name: 'Executive Platinum',\n      allianceStatus: 'Oneworld Emerald',\n      qualification: [\n        {\n          type: 'miles',\n          number: 100000,\n          qualificationPeriod: 12,\n          validity: 12,\n          milesName: {\n                        en: 'EQM',\n                        de: 'EQM',\n                    },\n          secType: 'miles',\n          secNumber: 15000,\n          secCalculate: getmqd,\n          secmilesName: {\n              en: 'EQD',\n              de: 'EQD',\n          }\n        },\n        {\n          type: 'segments',\n          number: 120,\n          qualificationPeriod: 12,\n          validity: 12,\n          calculate: countSegments,\n          note: {\n            en: 'Only segments with mileage credit count.',\n            de: 'Nur Segmente mit Meilengutschrift zählen.',\n            es: '',\n          },\n          secType: 'miles',\n          secNumber: 15000,\n          secCalculate: getmqd,\n          secmilesName: {\n              en: 'EQD',\n              de: 'EQD',\n          }\n        },\n      ]\n    },\n  ]\n};"]}