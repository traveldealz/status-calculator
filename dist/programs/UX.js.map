{"version":3,"sources":["src/programs/UX.js"],"names":["calculateMiles","segments","data","airports","reduce","acc","itinerary","mileage","value","totals","find","item","id","carrier","ticketer","includes","multiplier","bookingClass","origin","country_code","destination","price","rdm","name","alliance","qualificationPeriodType","status","allianceStatus","qualification","type","number","qualificationPeriod","calculate","validity","note","en","de","es"],"mappings":"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","sourceRoot":"/source_map/","sourcesContent":["export function calculateMiles(segments, data, airports) {\n    return data.reduce((acc,itinerary) => {\n        let mileage = itinerary.value?.totals?.find(item => 'UX' === item.id);\n        if(!mileage) {\n          return [acc[0], acc[1]+1];\n        }\n        if(segments[acc[1]].carrier  && segments[acc[1]].ticketer){\n        if(['UX'].includes(segments[acc[1]].carrier) || ['UX'].includes(segments[acc[1]].ticketer)) {\n          let multiplier = 5;\n          if(['C','J','D','I'].includes(segments[acc[1]].bookingClass)) {\n              multiplier += 3;}\n          if(airports[segments[acc[1]].origin].country_code == \"US\" || airports[segments[acc[1]].destination].country_code == \"US\"){\n            multiplier += 1;\n          }\n          if(18000 > acc[0]) return [acc[0] + (segments[acc[1]].price * multiplier), acc[1]+1];\n          if(32000 > acc[0]) return [acc[0] + (segments[acc[1]].price * multiplier)*1.5, acc[1]+1];\n          if(60000 > acc[0]) return [acc[0] + (segments[acc[1]].price * multiplier)*1.75, acc[1]+1];\n          if(60000 < acc[0]) return [acc[0] + (segments[acc[1]].price * multiplier)*2, acc[1]+1];\n            ;\n        }\n        return  [acc[0] + mileage.rdm[0], acc[1]+1];\n        }\n        else {\n                return  [acc[0] + mileage.rdm[0], acc[1]+1];   \n        }\n        }, [0, 0])[0];\n}\n\n\n\nexport default {\n  name: 'Air Europa Suma',\n  alliance: 'SkyTeam',\n  qualificationPeriodType: 'Consecutive months',\n  status: [\n    {\n      name: 'Silver',\n      allianceStatus: 'SkyTeam Elite',\n      qualification: [\n        {\n          type: 'miles',\n          number: 18000,\n          qualificationPeriod: 12,\n          calculate: calculateMiles,\n          validity: 12,\n        },\n        {\n          type: 'segments',\n          number: 14,\n          qualificationPeriod: 12,\n          validity: 12,\n        },\n      ],\n    },\n    {\n      name: 'Gold',\n      allianceStatus: 'SkyTeam Elite Plus',\n      qualification: [\n        {\n          type: 'miles',\n          number: 32000,\n          qualificationPeriod: 12,\n          calculate: calculateMiles,\n          validity: 12,\n        },\n        {\n          type: 'segments',\n          number: 26,\n          qualificationPeriod: 12,\n          validity: 12,\n        },\n      ],\n    },\n    {\n      name: 'Platinum',\n      allianceStatus: 'SkyTeam Elite Plus',\n      qualification: [\n        {\n          type: 'miles',\n          number: 60000,\n          qualificationPeriod: 12,\n          calculate: calculateMiles,\n          validity: 12,\n        },\n        {\n          type: 'segments',\n          number: 50,\n          qualificationPeriod: 12,\n          validity: 12,\n        },\n      ]\n    }\n  ],\n    note: {\n        en: 'If you do not enter the ticketing carrier and the flight price, this calculation only works for flights that are not issued & operated by Air Europa.',\n        de: 'Sofern Sie nicht den Ticketing-Carrier und den Flugpreis angeben, stimmt diese Berechnung nur wenn die Flüge weder von Air Europa ausgestellt noch ausgeführt werden. ',\n        es: '',\n    },\n};"]}